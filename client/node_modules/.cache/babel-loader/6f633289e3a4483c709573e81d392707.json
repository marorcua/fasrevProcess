{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Products/ProductperSupplier.js\";\nimport { Component } from 'react';\nimport ProductsService from '../../../service/products.service';\nimport ProductCard from './ProductCard';\nimport SpinnerRoll from '../../shared/Spinner/SpinnnerRoll';\nimport { Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductPerSupplier extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: undefined\n    };\n    this.productsService = new ProductsService();\n  }\n\n  componentDidMount() {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    this.productsService.getProductBySupplier().then(response => this.setState({\n      products: response.data\n    })).catch(err => console.log('Error', err));\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    return !products ? /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: products.map(elm => /*#__PURE__*/_jsxDEV(ProductCard, { ...elm\n        }, elm._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ProductPerSupplier;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Products/ProductperSupplier.js"],"names":["Component","ProductsService","ProductCard","SpinnerRoll","Row","ProductPerSupplier","constructor","state","products","undefined","productsService","componentDidMount","loadProducts","getProductBySupplier","then","response","setState","data","catch","err","console","log","render","map","elm","_id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,GAAT,QAAoB,iBAApB;;;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AAEvCM,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEC;AADD,KAAb;AAGA,SAAKC,eAAL,GAAuB,IAAIT,eAAJ,EAAvB;AACH;;AAGDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX,SAAKF,eAAL,CACKG,oBADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO,QAAQ,CAACE;AAArB,KAAd,CAFtB,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAHlB;AAIH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEd,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,WACI,CAACC,QAAD,gBAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAII;AAAA,6BACI,QAAC,GAAD;AAAA,kBACKA,QAAQ,CAACe,GAAT,CAAaC,GAAG,iBAAI,QAAC,WAAD,OAA+BA;AAA/B,WAAkBA,GAAG,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,gBAApB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,qBALR;AAWH;;AAnCsC;;AAsC3C,eAAepB,kBAAf","sourcesContent":["import { Component } from 'react'\nimport ProductsService from '../../../service/products.service'\nimport ProductCard from './ProductCard'\nimport SpinnerRoll from '../../shared/Spinner/SpinnnerRoll'\nimport { Row } from 'react-bootstrap'\n\nclass ProductPerSupplier extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            products: undefined\n        }\n        this.productsService = new ProductsService()\n    }\n\n\n    componentDidMount() {\n        this.loadProducts()\n    }\n\n    loadProducts() {\n        this.productsService\n            .getProductBySupplier()\n            .then(response => this.setState({ products: response.data }))\n            .catch(err => console.log('Error', err))\n    }\n\n    render() {\n        const { products } = this.state\n        return (\n            !products\n                ?\n                <SpinnerRoll />\n                :\n                <>\n                    <Row>\n                        {products.map(elm => <ProductCard key={elm._id} {...elm} />)}\n                    </Row>\n                </>\n        )\n    }\n}\n\nexport default ProductPerSupplier"]},"metadata":{},"sourceType":"module"}