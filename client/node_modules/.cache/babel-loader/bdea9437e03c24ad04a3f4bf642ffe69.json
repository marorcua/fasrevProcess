{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Cart/CartRow.js\";\nimport { Component } from 'react';\nimport './CartRow.css';\nimport { Col, Form, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport OrdersService from '../../../service/order.service';\nimport OptionsService from '../../../service/option.service';\nimport { Link } from 'react-router-dom';\nimport SpinnerRoll from 'components/shared/Spinner/SpinnnerRoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: this.props,\n      quantity: this.props.quantity\n    };\n    this.orderService = new OrdersService();\n    this.optionService = new OptionsService();\n  }\n\n  handleDelete(e, id) {\n    e.preventDefault();\n    this.orderService.deleteProduct(id).then(() => {\n      this.props.fetchProducts();\n      this.props.updateCartNumber();\n      this.updateStock();\n      this.props.handleAlert(`${this.state.products.product.name} was removed from your Cart`);\n    }).catch(err => console.log(err));\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      quantity: e.target.value\n    });\n  }\n\n  handleSubmit(e, id) {\n    e.preventDefault();\n    const quantity = this.state.quantity;\n    this.orderService.editQuantity(id, {\n      quantity\n    }).then(() => {\n      this.props.fetchProducts();\n      this.props.handleAlert(`${this.state.products.product.name} quantity was update to ${this.state.quantity} items.`);\n    }).catch(err => console.log(err));\n  }\n\n  updateStock() {\n    const currentStock = this.props.option.stock;\n    const newStock = currentStock + this.state.quantity;\n    const optionId = this.props.option._id;\n    this.optionService.updateStock(optionId, {\n      stock: newStock\n    }).then(response => console.log(response)).catch(err => console.log(err));\n  }\n\n  render() {\n    if (!this.state.products) {\n      /*#__PURE__*/\n      _jsxDEV(SpinnerRoll, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }, this);\n    } else {\n      const product = this.state.products;\n      const totalPrice = this.state.quantity * product.option.price;\n      const link = `/product/${product.product._id}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: product._id,\n        className: \"cart-items\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.option.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            className: \"delete-btn\",\n            onSubmit: e => this.handleDelete(e, product._id),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-dark\",\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: link,\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: product.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Color: \", product.option.color]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Unit price: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"$\", product.option.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total price: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"$\", totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"edit-quantity-form\",\n            onSubmit: e => this.handleSubmit(e, product._id),\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"quantity\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Quantity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"1\",\n                  name: \"quantity\",\n                  value: this.state.quantity,\n                  onChange: e => this.handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default CartRow;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Cart/CartRow.js"],"names":["Component","Col","Form","Button","FontAwesomeIcon","faTrashAlt","OrdersService","OptionsService","Link","SpinnerRoll","CartRow","constructor","props","state","products","quantity","orderService","optionService","handleDelete","e","id","preventDefault","deleteProduct","then","fetchProducts","updateCartNumber","updateStock","handleAlert","product","name","catch","err","console","log","handleInputChange","setState","target","value","handleSubmit","editQuantity","currentStock","option","stock","newStock","optionId","_id","response","render","totalPrice","price","link","image","color"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport './CartRow.css'\nimport { Col, Form, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport OrdersService from '../../../service/order.service'\nimport OptionsService from '../../../service/option.service'\nimport { Link } from 'react-router-dom'\nimport SpinnerRoll from 'components/shared/Spinner/SpinnnerRoll'\n\n\nclass CartRow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: this.props,\n            quantity: this.props.quantity\n        }\n\n        this.orderService = new OrdersService()\n        this.optionService = new OptionsService()\n    }\n\n    handleDelete(e, id) {\n        e.preventDefault()\n        this.orderService\n            .deleteProduct(id)\n            .then(() => {\n                this.props.fetchProducts()\n                this.props.updateCartNumber()\n                this.updateStock()\n                this.props.handleAlert(`${this.state.products.product.name} was removed from your Cart`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange(e) {\n        this.setState({ quantity: e.target.value })\n    }\n\n    handleSubmit(e, id) {\n        e.preventDefault()\n        const quantity = this.state.quantity\n        this.orderService\n            .editQuantity(id, { quantity })\n            .then(() => {\n                this.props.fetchProducts()\n                this.props.handleAlert(`${this.state.products.product.name} quantity was update to ${this.state.quantity} items.`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateStock() {\n        const currentStock = this.props.option.stock\n        const newStock = currentStock + this.state.quantity\n        const optionId = this.props.option._id\n        this.optionService\n            .updateStock(optionId, { stock: newStock })\n            .then(response => console.log(response))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n            if (!this.state.products) { <SpinnerRoll /> } else {\n            \n                const product = this.state.products\n                const totalPrice = this.state.quantity * product.option.price\n                const link = `/product/${product.product._id}`\n\n                return (\n                    <div id={product._id} className=\"cart-items\">\n                        <Col md={3}>\n                            <img src={product.option.image} alt={product.name}></img>\n                        </Col>\n                        <Col md={9}>\n                            <Form className=\"delete-btn\" onSubmit={e => this.handleDelete(e, product._id)}>\n                                <Button className=\"btn-dark\" type=\"submit\"><FontAwesomeIcon icon={faTrashAlt} /></Button>\n                            </Form>\n                            <Link to={link} ><h5>{product.product.name}</h5></Link>\n                            <p>Color: {product.option.color}</p>\n                            <p>Unit price: <b>${product.option.price}</b></p>\n                            <p>Total price: <b>${totalPrice}</b></p>\n                            <Form className=\"edit-quantity-form\" onSubmit={e => this.handleSubmit(e, product._id)}>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"quantity\">\n                                        <Form.Label>Quantity:</Form.Label>\n                                        <Form.Control type=\"number\" min=\"1\" name=\"quantity\" value={this.state.quantity} onChange={e => this.handleInputChange(e)} />\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={3}>\n                                    <Button variant=\"dark\" type=\"submit\">Update</Button>\n                                </Col>\n                            </Form>\n                        </Col>\n                    </div>\n            )\n        }\n    }\n}\n\nexport default CartRow"]},"metadata":{},"sourceType":"module"}