{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/NewProduct/NewOption.js\";\nimport { Component } from 'react';\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\nimport OptionService from '../../../service/option.service';\nimport UploadsService from '../../../service/uploads.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewOption extends Component {\n  constructor() {\n    super();\n    this.state = {\n      option: {\n        price: 0,\n        color: '',\n        stock: 0,\n        image: ''\n      },\n      alert: {\n        show: false,\n        text: ' '\n      },\n      isUploading: false\n    };\n    this.optionService = new OptionService();\n    this.uploadsService = new UploadsService();\n  }\n\n  handleInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      option: { ...this.state.option,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.optionService.createOption(this.props.product_id, this.state.option).then(response => {\n      this.props.fetchProduct();\n      this.props.handleAlert(`A new option has been created`);\n    }).catch(err => this.setState({\n      alert: {\n        show: true,\n        text: err.response.data.message\n      }\n    }));\n    this.emptyForm();\n  }\n\n  handleFileUpload(e) {\n    this.setState({\n      isUploading: true\n    });\n    const uploadData = new FormData();\n    uploadData.append('imageData', e.target.files[0]);\n    this.uploadsService.uploadimage(uploadData).then(response => this.setState({\n      isUploading: false,\n      option: { ...this.state.option,\n        image: response.data.secure_url\n      }\n    })).catch(err => console.log(err));\n  }\n\n  emptyForm() {\n    this.setState({\n      option: { ...this.state.product,\n        price: ' ',\n        color: ' ',\n        stock: ' ',\n        image: ' '\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        show: this.state.alert.show,\n        variant: \"danger\",\n        children: this.state.alert.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: this.state.price,\n            onChange: e => this.handleInputChange(e),\n            name: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"color\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: this.state.color,\n            onChange: e => this.handleInputChange(e),\n            name: \"color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Choose between: black, white, red, blue, green, brown, beige, yellow, orange, grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"stock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: this.state.stock,\n            onChange: e => this.handleInputChange(e),\n            name: \"stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => this.handleFileUpload(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          style: {\n            width: '100%'\n          },\n          type: \"submit\",\n          disabled: this.state.isUploading,\n          children: this.state.isUploading ? 'One second, uploading...' : 'Create Option'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default NewOption;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/NewProduct/NewOption.js"],"names":["Component","Form","Button","Container","Alert","OptionService","UploadsService","NewOption","constructor","state","option","price","color","stock","image","alert","show","text","isUploading","optionService","uploadsService","handleInputChange","e","name","value","target","setState","handleSubmit","preventDefault","createOption","props","product_id","then","response","fetchProduct","handleAlert","catch","err","data","message","emptyForm","handleFileUpload","uploadData","FormData","append","files","uploadimage","secure_url","console","log","product","render","width"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,iBAA/C;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAE9BQ,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CADH;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,KAAK,EAAE,CAHH;AAIJC,QAAAA,KAAK,EAAE;AAJH,OADC;AAOTC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,IAAI,EAAE;AAFH,OAPE;AAWTC,MAAAA,WAAW,EAAE;AAXJ,KAAb;AAaA,SAAKC,aAAL,GAAqB,IAAId,aAAJ,EAArB;AACA,SAAKe,cAAL,GAAsB,IAAId,cAAJ,EAAtB;AACH;;AAEDe,EAAAA,iBAAiB,CAACC,CAAD,EAAI;AACjB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,MAAM,EAAE,EAAE,GAAG,KAAKD,KAAL,CAAWC,MAAhB;AAAwB,SAACa,IAAD,GAAQC;AAAhC;AAAV,KAAd;AACH;;AAEDG,EAAAA,YAAY,CAACL,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACM,cAAF;AACA,SAAKT,aAAL,CACKU,YADL,CACkB,KAAKC,KAAL,CAAWC,UAD7B,EACyC,KAAKtB,KAAL,CAAWC,MADpD,EAEKsB,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAKH,KAAL,CAAWI,YAAX;AACA,WAAKJ,KAAL,CAAWK,WAAX,CAAwB,+BAAxB;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAI,KAAKX,QAAL,CAAc;AAAEX,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAEoB,GAAG,CAACJ,QAAJ,CAAaK,IAAb,CAAkBC;AAAtC;AAAT,KAAd,CANlB;AAOA,SAAKC,SAAL;AACH;;AAEDC,EAAAA,gBAAgB,CAACnB,CAAD,EAAI;AAChB,SAAKI,QAAL,CAAc;AAAER,MAAAA,WAAW,EAAE;AAAf,KAAd;AACA,UAAMwB,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,MAAX,CAAkB,WAAlB,EAA+BtB,CAAC,CAACG,MAAF,CAASoB,KAAT,CAAe,CAAf,CAA/B;AACA,SAAKzB,cAAL,CACK0B,WADL,CACiBJ,UADjB,EAEKV,IAFL,CAEUC,QAAQ,IAAI,KAAKP,QAAL,CAAc;AAAER,MAAAA,WAAW,EAAE,KAAf;AAAsBR,MAAAA,MAAM,EAAE,EAAE,GAAG,KAAKD,KAAL,CAAWC,MAAhB;AAAwBI,QAAAA,KAAK,EAAEmB,QAAQ,CAACK,IAAT,CAAcS;AAA7C;AAA9B,KAAd,CAFtB,EAGKX,KAHL,CAGWC,GAAG,IAAIW,OAAO,CAACC,GAAR,CAAYZ,GAAZ,CAHlB;AAIH;;AAEDG,EAAAA,SAAS,GAAG;AACR,SAAKd,QAAL,CAAc;AAAEhB,MAAAA,MAAM,EAAE,EAAE,GAAG,KAAKD,KAAL,CAAWyC,OAAhB;AAAyBvC,QAAAA,KAAK,EAAE,GAAhC;AAAsCC,QAAAA,KAAK,EAAE,GAA7C;AAAkDC,QAAAA,KAAK,EAAE,GAAzD;AAA+DC,QAAAA,KAAK,EAAE;AAAtE;AAAV,KAAd;AACH;;AAEDqC,EAAAA,MAAM,GAAG;AACL,wBACQ,QAAC,SAAD;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWM,KAAX,CAAiBC,IAA9B;AAAoC,QAAA,OAAO,EAAC,QAA5C;AAAA,kBAAsD,KAAKP,KAAL,CAAWM,KAAX,CAAiBE;AAAvE;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEK,CAAC,IAAI,KAAKK,YAAL,CAAkBL,CAAlB,CAArB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,KAA9C;AAAqD,YAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAApE;AAA+F,YAAA,IAAI,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,KAA5C;AAAmD,YAAA,QAAQ,EAAEU,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAAlE;AAA6F,YAAA,IAAI,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGA,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAcI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,KAA9C;AAAqD,YAAA,QAAQ,EAAES,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAApE;AAA+F,YAAA,IAAI,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,QAAQ,EAAEA,CAAC,IAAI,KAAKmB,gBAAL,CAAsBnB,CAAtB;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAwBA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAE;AAAE8B,YAAAA,KAAK,EAAE;AAAT,WAA9B;AAAiD,UAAA,IAAI,EAAC,QAAtD;AAA+D,UAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWS,WAApF;AAAA,oBACK,KAAKT,KAAL,CAAWS,WAAX,GAAyB,0BAAzB,GAAsD;AAD3D;AAAA;AAAA;AAAA;AAAA,gBAxBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAiCH;;AAtF6B;;AAyFlC,eAAeX,SAAf","sourcesContent":["import { Component } from 'react'\nimport { Form, Button, Container, Alert } from 'react-bootstrap'\nimport OptionService from '../../../service/option.service'\nimport UploadsService from '../../../service/uploads.service'\n\nclass NewOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            option: {\n                price: 0,\n                color: '',\n                stock: 0,\n                image: ''\n            },\n            alert: {\n                show: false,\n                text: ' '\n            },\n            isUploading: false\n        }\n        this.optionService = new OptionService()\n        this.uploadsService = new UploadsService()\n    }\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ option: { ...this.state.option, [name]: value } })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.optionService\n            .createOption(this.props.product_id, this.state.option)\n            .then(response => {\n                this.props.fetchProduct()\n                this.props.handleAlert(`A new option has been created`)\n            })\n            .catch(err => this.setState({ alert: { show: true, text: err.response.data.message } }))\n        this.emptyForm()\n    }\n\n    handleFileUpload(e) {\n        this.setState({ isUploading: true })\n        const uploadData = new FormData()\n        uploadData.append('imageData', e.target.files[0])\n        this.uploadsService\n            .uploadimage(uploadData)\n            .then(response => this.setState({ isUploading: false, option: { ...this.state.option, image: response.data.secure_url } }))\n            .catch(err => console.log(err))\n    }\n\n    emptyForm() {\n        this.setState({ option: { ...this.state.product, price: ' ' , color: ' ', stock: ' ' , image: ' ' }})\n    }\n\n    render() {\n        return (\n                <Container >\n                <Alert show={this.state.alert.show} variant='danger'>{this.state.alert.text}</Alert>\n                    <Form onSubmit={e => this.handleSubmit(e)}>\n                        <Form.Group controlId=\"price\">\n                            <Form.Label>Price:</Form.Label>\n                            <Form.Control type=\"number\" value={this.state.price} onChange={e => this.handleInputChange(e)} name=\"price\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"color\">\n                            <Form.Label>Color:</Form.Label>\n                            <Form.Control type=\"text\" value={this.state.color} onChange={e => this.handleInputChange(e)} name=\"color\" />\n                        <Form.Text className=\"text-muted\">\n                            Choose between: black, white, red, blue, green, brown, beige, yellow, orange, grey\n                        </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"stock\">\n                            <Form.Label>Stock:</Form.Label>\n                            <Form.Control type=\"number\" value={this.state.stock} onChange={e => this.handleInputChange(e)} name=\"stock\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"image\">\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control type=\"file\" onChange={e => this.handleFileUpload(e)} />\n                        </Form.Group>\n\n                    <Button variant=\"dark\" style={{ width: '100%' }} type=\"submit\" disabled={this.state.isUploading}>\n                        {this.state.isUploading ? 'One second, uploading...' : 'Create Option'}\n                    </Button>\n                    </Form>\n                </Container>\n        )\n    }\n}\n\nexport default NewOption"]},"metadata":{},"sourceType":"module"}