{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/CustomerOrderCard.js\";\nimport './CustomerOrderCard.css';\nimport { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport CustomerOrderRow from './CustomerOrderRow';\nimport SpinnerRoll from '../../shared/Spinner/SpinnnerRoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerOrderCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: undefined,\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    this.updateProducts();\n    this.updateTotal();\n  }\n\n  updateProducts() {\n    this.setState({\n      products: this.props.products\n    });\n  }\n\n  updateTotal() {\n    this.props.coupon ? this.setState({\n      total: this.props.products.map(elm => elm.option.price * elm.quantity).reduce((accumulator, currentValue) => accumulator + currentValue) - this.props.coupon.value\n    }) : this.setState({\n      total: this.props.products.map(elm => elm.option.price * elm.quantity).reduce((accumulator, currentValue) => accumulator + currentValue)\n    });\n  }\n\n  render() {\n    const date = this.props.updatedAt.replace(/T.*/, '').split('-').reverse().join('-');\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-header\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"ORDER DATE:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 46\n              }, this), \" \", date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"TOTAL:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this), \" $\", this.state.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"ORDER N.\\xBA \", this.props._id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), !this.state.products ? /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }, this) : this.state.products.map(elm => /*#__PURE__*/_jsxDEV(CustomerOrderRow, { ...elm\n      }, elm._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 52\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomerOrderCard;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/CustomerOrderCard.js"],"names":["Component","Row","Col","CustomerOrderRow","SpinnerRoll","CustomerOrderCard","constructor","state","products","undefined","total","componentDidMount","updateProducts","updateTotal","setState","props","coupon","map","elm","option","price","quantity","reduce","accumulator","currentValue","value","render","date","updatedAt","replace","split","reverse","join","_id"],"mappings":"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","sourcesContent":["import './CustomerOrderCard.css'\nimport { Component } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport CustomerOrderRow from './CustomerOrderRow'\nimport SpinnerRoll from '../../shared/Spinner/SpinnnerRoll'\n\nclass CustomerOrderCard extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            products: undefined,\n            total: 0\n        }\n    }\n\n    componentDidMount() {\n        this.updateProducts()\n        this.updateTotal()\n    }\n\n    updateProducts() {\n        this.setState({ products: this.props.products })\n    }\n\n    updateTotal() {\n        this.props.coupon ?\n            this.setState({ total: this.props.products.map(elm => elm.option.price * elm.quantity).reduce((accumulator, currentValue) => accumulator + currentValue) - this.props.coupon.value })\n            : this.setState({ total: this.props.products.map(elm => elm.option.price * elm.quantity).reduce((accumulator, currentValue) => accumulator + currentValue) })\n    }\n\n    render() {\n        const date = this.props.updatedAt.replace(/T.*/, '').split('-').reverse().join('-')\n        return (\n            <section>\n                <div className=\"order-header\">\n                    <Row>\n                        <Col md={3}>\n                            <span>ORDER DATE:<br></br> {date}</span>\n                        </Col>\n                        <Col md={3}>\n                            <span>TOTAL:<br></br> ${this.state.total}</span>\n                        </Col>\n                        <Col md={6}>\n                            <span>ORDER N.ยบ {this.props._id}</span>\n                        </Col>\n                    </Row>\n                </div>\n                {!this.state.products ? <SpinnerRoll /> :\n                    this.state.products.map(elm => <CustomerOrderRow key={elm._id} {...elm} />)}\n            </section>\n        )\n    }\n}\n\nexport default CustomerOrderCard"]},"metadata":{},"sourceType":"module"}