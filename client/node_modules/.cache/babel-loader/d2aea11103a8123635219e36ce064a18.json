{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/DeleteUser.js\";\nimport { Button } from 'react-bootstrap';\nimport AuthService from '../../../service/auth.service';\nimport ClientService from '../../../service/client.service';\nimport OptionService from '../../../service/option.service';\nimport ProductsService from '../../../service/products.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteUser = ({ ...props\n}) => {\n  const clientService = new ClientService();\n  const productService = new ProductsService();\n  const optionService = new OptionService();\n  const authService = new AuthService();\n\n  function eliminateAccount(e) {\n    var _props$currentUser$cl, _props$currentUser$cl2, _props$currentUser$cl3, _props$currentUser$cl4;\n\n    e.preventDefault();\n\n    if ((_props$currentUser$cl = props.currentUser.client) === null || _props$currentUser$cl === void 0 ? void 0 : (_props$currentUser$cl2 = _props$currentUser$cl.products.options) === null || _props$currentUser$cl2 === void 0 ? void 0 : _props$currentUser$cl2.length) {\n      props.currentUser.client.products.options.forEach(option => {\n        optionService.deleteOption(option).then(response => {\n          console.log(response);\n        }).catch(err => console.log(err));\n      });\n    }\n\n    if ((_props$currentUser$cl3 = props.currentUser.client) === null || _props$currentUser$cl3 === void 0 ? void 0 : (_props$currentUser$cl4 = _props$currentUser$cl3.products) === null || _props$currentUser$cl4 === void 0 ? void 0 : _props$currentUser$cl4.length) {\n      props.currentUser.client.products.forEach(product => {\n        productService.deleteProduct(product).then(response => this.props.fetchProducts()).catch(err => console.log(err));\n      });\n    }\n\n    if (props.currentUser.client) {\n      clientService.deleteClient(props.currentUser.client._id).then(response => console.log('client', response)).catch(err => console.log('Error deleting client', err));\n    }\n\n    authService.deleteUser(props.currentUser._id).then(response => props.loggedUser.role === 'ADMIN' ? props.loadClients() : logOut()).catch(err => console.log('Error deleting user', err));\n  }\n\n  function logOut() {\n    authService.logout().then(res => props.storeUser(undefined)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => eliminateAccount(e),\n      variant: \"outline-danger\",\n      style: {\n        width: '100%'\n      },\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = DeleteUser;\nexport default DeleteUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteUser\");","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/DeleteUser.js"],"names":["Button","AuthService","ClientService","OptionService","ProductsService","DeleteUser","props","clientService","productService","optionService","authService","eliminateAccount","e","preventDefault","currentUser","client","products","options","length","forEach","option","deleteOption","then","response","console","log","catch","err","product","deleteProduct","fetchProducts","deleteClient","_id","deleteUser","loggedUser","role","loadClients","logOut","logout","res","storeUser","undefined","width"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap'\nimport AuthService from '../../../service/auth.service'\nimport ClientService from '../../../service/client.service'\nimport OptionService from '../../../service/option.service'\nimport ProductsService from '../../../service/products.service'\n\nconst DeleteUser = ({ ...props }) => {\n\n    const clientService = new ClientService()\n    const productService = new ProductsService()\n    const optionService = new OptionService()\n    const authService = new AuthService()\n\n    function eliminateAccount(e) {\n\n        e.preventDefault()\n\n        if (props.currentUser.client?.products.options?.length) {\n            props.currentUser.client.products.options.forEach(option => {\n                optionService\n                    .deleteOption(option)\n                    .then(response => {\n                        console.log(response)\n                    })\n                    .catch(err => console.log(err))\n            })\n        }\n\n        if (props.currentUser.client?.products?.length) {\n            props.currentUser.client.products.forEach(product => {\n                productService\n                    .deleteProduct(product)\n                    .then(response => this.props.fetchProducts())\n                    .catch(err => console.log(err))\n            })\n        }\n\n        if (props.currentUser.client) {\n            clientService\n                .deleteClient(props.currentUser.client._id)\n                .then(response => console.log('client', response))\n                .catch(err => console.log('Error deleting client', err))\n        }\n\n        authService\n            .deleteUser(props.currentUser._id)\n            .then(response => props.loggedUser.role === 'ADMIN' ? props.loadClients() : logOut())\n            .catch(err => console.log('Error deleting user', err))\n\n    }\n\n\n    function logOut() {\n        authService\n            .logout()\n            .then(res => props.storeUser(undefined))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <>\n            <Button onClick={(e) => eliminateAccount(e)} variant=\"outline-danger\" style={{ width: '100%' }}>\n                Delete Account\n            </Button>\n        </>\n    )\n}\n\nexport default DeleteUser"]},"metadata":{},"sourceType":"module"}