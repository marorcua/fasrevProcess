{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Auth/ProtectedRoute.js\";\nimport SpinnerRoll from './../../shared/Spinner/SpinnnerRoll';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  loggedUser,\n  condition,\n  component: Component,\n  ...props\n}) => {\n  return loggedUser === null ? /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 34\n  }, this) : loggedUser && condition ? /*#__PURE__*/_jsxDEV(Component, {\n    loggedUser: loggedUser,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 77\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Auth/ProtectedRoute.js"],"names":["SpinnerRoll","Redirect","ProtectedRoute","loggedUser","condition","component","Component","props"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,qCAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,SAAS,EAAEC,SAApC;AAA+C,KAAGC;AAAlD,CAAD,KAA+D;AAElF,SAAOJ,UAAU,KAAK,IAAf,gBAAsB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAtB,GAAuCA,UAAU,IAAIC,SAAd,gBAA0B,QAAC,SAAD;AAAW,IAAA,UAAU,EAAED,UAAvB;AAAA,OAAuCI;AAAvC;AAAA;AAAA;AAAA;AAAA,UAA1B,gBAE1C,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAFJ;AAGH,CALD;;KAAML,c;AAON,eAAeA,cAAf","sourcesContent":["import SpinnerRoll from './../../shared/Spinner/SpinnnerRoll'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ loggedUser, condition, component: Component, ...props }) => {\r\n\r\n    return loggedUser === null ? <SpinnerRoll/> : loggedUser && condition ? <Component loggedUser={loggedUser} {...props} />\r\n        :\r\n        <Redirect to={'/login'} />\r\n}\r\n\r\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}