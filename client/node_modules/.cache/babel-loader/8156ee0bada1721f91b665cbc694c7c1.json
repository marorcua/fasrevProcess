{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Admin/SupplierList.js\";\nimport SpinnerRoll from \"components/shared/Spinner/SpinnnerRoll\";\nimport { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport AdminServices from '../../../service/admin.service';\nimport ClientCard from \"./ClientCard\";\nimport AuthService from \"service/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SupplierList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      suppliers: undefined\n    };\n    this.adminService = new AdminServices();\n    this.authService = new AuthService();\n  }\n\n  componentDidMount() {\n    this.loadClients();\n  }\n\n  loadClients() {\n    this.adminService.getAllSuppliers().then(response => this.setState({\n      suppliers: response.data\n    })).catch(err => console.log(err));\n  }\n\n  editRole(e, id) {\n    const userDetails = {\n      role: e,\n      id\n    };\n    this.authService.updateRole(userDetails).then(response => this.loadClients()).catch(err => console.log('error no lo coge'));\n  }\n\n  render() {\n    const {\n      suppliers\n    } = this.state;\n    return !this.props.loggedUser || this.props.loggedUser.role !== 'ADMIN' ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 85\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginLeft: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"# Favorites\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Edit user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Delete user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: suppliers ? suppliers.map((elm, index) => /*#__PURE__*/_jsxDEV(ClientCard, {\n              number: index,\n              loadClients: () => this.loadClients(),\n              refreshClients: () => this.loadClients(),\n              editRole: (e, id) => this.editRole(e, id),\n              loggedUser: this.props.loggedUser,\n              ...elm\n            }, elm._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 67\n            }, this)) : /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default SupplierList;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Admin/SupplierList.js"],"names":["SpinnerRoll","Component","Container","Row","Redirect","AdminServices","ClientCard","AuthService","SupplierList","constructor","state","suppliers","undefined","adminService","authService","componentDidMount","loadClients","getAllSuppliers","then","response","setState","data","catch","err","console","log","editRole","e","id","userDetails","role","updateRole","render","props","loggedUser","marginLeft","map","elm","index","_id"],"mappings":"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","sourcesContent":["import SpinnerRoll from \"components/shared/Spinner/SpinnnerRoll\"\r\nimport { Component } from \"react\"\r\nimport { Container, Row } from \"react-bootstrap\"\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\"\r\nimport AdminServices from '../../../service/admin.service'\r\nimport ClientCard from \"./ClientCard\"\r\nimport AuthService from \"service/auth.service\"\r\n\r\n\r\nclass SupplierList extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            suppliers: undefined\r\n        }\r\n        this.adminService = new AdminServices()\r\n        this.authService = new AuthService()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadClients()\r\n    }\r\n\r\n    loadClients() {\r\n        this.adminService\r\n            .getAllSuppliers()\r\n            .then(response => this.setState({ suppliers: response.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    editRole(e, id) {\r\n        const userDetails = { role: e, id }\r\n\r\n        this.authService\r\n            .updateRole(userDetails)\r\n            .then(response => this.loadClients())\r\n            .catch(err => console.log('error no lo coge'))\r\n    }\r\n\r\n    render() {\r\n        const { suppliers } = this.state\r\n        return (!this.props.loggedUser || this.props.loggedUser.role !== 'ADMIN') ? <Redirect to=\"/\" /> :\r\n            (\r\n                <Container style={{ marginLeft: '20px' }}>\r\n                    <Row>\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Products</th>\r\n                                    <th scope=\"col\"># Favorites</th>\r\n                                    <th scope=\"col\">Edit user</th>\r\n                                    <th scope=\"col\">Delete user</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {suppliers\r\n                                    ?\r\n                                    suppliers.map((elm, index) => <ClientCard key={elm._id} number={index}\r\n                                        loadClients={() => this.loadClients()} refreshClients={() => this.loadClients()} editRole={(e, id) => this.editRole(e, id)} loggedUser={this.props.loggedUser} {...elm} />)\r\n                                    :\r\n                                    <SpinnerRoll />\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </Row>\r\n                </Container>)\r\n    }\r\n}\r\n\r\nexport default SupplierList"]},"metadata":{},"sourceType":"module"}