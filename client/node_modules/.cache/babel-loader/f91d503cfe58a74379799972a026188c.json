{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Admin/ClientList.js\";\nimport SpinnerRoll from \"components/shared/Spinner/SpinnnerRoll\";\nimport { Component } from \"react\";\nimport { Container, Modal, Row } from \"react-bootstrap\";\nimport AdminServices from '../../../service/admin.service';\nimport ClientCard from \"./ClientCard\";\nimport MyDetailsForm from './../ClientArea/MyDetailsForm';\nimport AuthService from \"service/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ClientList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clients: undefined,\n      showModal: false,\n      selectedClient: undefined\n    };\n    this.adminService = new AdminServices();\n    this.authService = new AuthService();\n  }\n\n  componentDidMount() {\n    this.loadClients();\n  }\n\n  loadClients() {\n    this.adminService.getAllClients().then(response => this.setState({\n      clients: response.data\n    })).catch(err => console.log('error no lo coge'));\n  }\n\n  onClickEdit(e, user) {\n    this.setState({\n      showModal: true,\n      selectedClient: user\n    });\n  }\n\n  editRole(e, id) {\n    const userDetails = {\n      role: e,\n      id\n    };\n    this.authService.updateRole(userDetails).then(response => this.loadClients()).catch(err => console.log('error no lo coge'));\n  }\n\n  render() {\n    const {\n      clients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showModal,\n        onHide: () => this.setState({\n          showModal: false\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Edit user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(MyDetailsForm, {\n            client: this.state.selectedClient,\n            loggedUser: this.props.loggedUser,\n            closeModal: () => this.setState({\n              showModal: false\n            }),\n            refreshClients: () => this.loadClients(),\n            role: 'CUSTOMER'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"# Favorites\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Edit user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Delete user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: clients ? clients.map((elm, index) => {\n              return /*#__PURE__*/_jsxDEV(ClientCard, {\n                number: index,\n                edit: (e, user) => this.onClickEdit(e, user),\n                editRole: (e, id) => this.editRole(e, id),\n                ...elm,\n                loadClients: () => this.loadClients(),\n                loggedUser: this.props.loggedUser\n              }, elm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 44\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientList;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/Admin/ClientList.js"],"names":["SpinnerRoll","Component","Container","Modal","Row","AdminServices","ClientCard","MyDetailsForm","AuthService","ClientList","constructor","state","clients","undefined","showModal","selectedClient","adminService","authService","componentDidMount","loadClients","getAllClients","then","response","setState","data","catch","err","console","log","onClickEdit","e","user","editRole","id","userDetails","role","updateRole","render","marginLeft","props","loggedUser","map","elm","index"],"mappings":"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","sourcesContent":["import SpinnerRoll from \"components/shared/Spinner/SpinnnerRoll\"\r\nimport { Component } from \"react\"\r\nimport { Container, Modal, Row } from \"react-bootstrap\"\r\nimport AdminServices from '../../../service/admin.service'\r\nimport ClientCard from \"./ClientCard\"\r\nimport MyDetailsForm from './../ClientArea/MyDetailsForm'\r\nimport AuthService from \"service/auth.service\"\r\n\r\n\r\nclass ClientList extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: undefined,\r\n            showModal: false,\r\n            selectedClient: undefined\r\n        }\r\n        this.adminService = new AdminServices()\r\n        this.authService = new AuthService()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadClients()\r\n    }\r\n\r\n    loadClients() {\r\n        this.adminService\r\n            .getAllClients()\r\n            .then(response => this.setState({ clients: response.data }))\r\n            .catch(err => console.log('error no lo coge'))\r\n    }\r\n\r\n    onClickEdit(e, user) {\r\n\r\n        this.setState({ showModal: true, selectedClient: user })\r\n    }\r\n\r\n    editRole(e, id) {\r\n        const userDetails = { role: e, id }\r\n\r\n        this.authService\r\n            .updateRole(userDetails)\r\n            .then(response => this.loadClients())\r\n            .catch(err => console.log('error no lo coge'))\r\n    }\r\n\r\n    render() {\r\n        const { clients } = this.state\r\n        return (\r\n            <Container style={{ marginLeft: '20px' }}>\r\n                <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\r\n                    <Modal.Header> <Modal.Title>Edit user</Modal.Title> </Modal.Header>\r\n                    <Modal.Body>\r\n                        <MyDetailsForm client={this.state.selectedClient} loggedUser={this.props.loggedUser}\r\n                            closeModal={() => this.setState({ showModal: false })} refreshClients={() => this.loadClients()} role={'CUSTOMER'} />\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Row>\r\n                    <table className=\"table\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Orders</th>\r\n                                <th scope=\"col\"># Favorites</th>\r\n                                <th scope=\"col\">Edit user</th>\r\n                                <th scope=\"col\">Delete user</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clients\r\n                                ?\r\n                                clients.map((elm, index) => {\r\n                                    return <ClientCard key={elm.id} number={index} edit={(e, user) => this.onClickEdit(e, user)} editRole={(e, id) => this.editRole(e, id)} {...elm} loadClients={() => this.loadClients()} loggedUser={this.props.loggedUser} />\r\n                                })\r\n                                :\r\n                                <SpinnerRoll />\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientList"]},"metadata":{},"sourceType":"module"}