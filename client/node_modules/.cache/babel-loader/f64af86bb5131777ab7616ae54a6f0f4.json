{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/EditProductModal.js\";\nimport './EditProductModal.css';\nimport { Component } from 'react';\nimport { Row, Modal, Col, Form, Button } from 'react-bootstrap';\nimport CategoryService from '../../../service/category.service';\nimport ProductsService from '../../../service/products.service';\nimport SpinnerRoll from 'components/shared/Spinner/SpinnnerRoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {\n        name: props.product.name,\n        description: props.product.description,\n        category: props.product.category\n      },\n      categoryOptions: undefined\n    };\n    this.categoriesService = new CategoryService();\n    this.productService = new ProductsService();\n  }\n\n  componentDidMount() {\n    this.loadCategories();\n  }\n\n  loadCategories() {\n    this.categoriesService.getAllCategories().then(response => {\n      this.setState({\n        categoryOptions: response.data\n      });\n    }).catch(err => console.log('Error', err));\n  }\n\n  handleInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      product: { ...this.state.product,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.productService.editProduct(this.props.product._id, this.state.product).then(response => {\n      this.props.closeModal();\n      this.props.fetchProduct();\n      this.props.handleAlert(`${this.state.product.name} has been updated`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return !this.state.categoryOptions ? /*#__PURE__*/_jsxDEV(SpinnerRoll, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Your Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => this.handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            as: Row,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: this.state.product.name,\n                onChange: e => this.handleInputChange(e),\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            as: Row,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"textarea\",\n                value: this.state.product.description,\n                onChange: e => this.handleInputChange(e),\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: this.state.product.category,\n              name: \"category\",\n              onChange: e => this.handleInputChange(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: this.state.product.category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), this.state.categoryOptions.map(elm => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: elm._id,\n                children: [\" \", elm.name]\n              }, elm._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 76\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"dark\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default EditProductModal;","map":{"version":3,"sources":["/home/mario/Desktop/Procesos/pruebaFasrev/client/src/components/pages/ClientArea/EditProductModal.js"],"names":["Component","Row","Modal","Col","Form","Button","CategoryService","ProductsService","SpinnerRoll","EditProductModal","constructor","props","state","product","name","description","category","categoryOptions","undefined","categoriesService","productService","componentDidMount","loadCategories","getAllCategories","then","response","setState","data","catch","err","console","log","handleInputChange","e","value","target","handleSubmit","preventDefault","editProduct","_id","closeModal","fetchProduct","handleAlert","render","map","elm"],"mappings":"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","sourcesContent":["import './EditProductModal.css'\nimport { Component } from 'react'\n\nimport { Row, Modal, Col, Form, Button } from 'react-bootstrap'\n\nimport CategoryService from '../../../service/category.service'\nimport ProductsService from '../../../service/products.service'\nimport SpinnerRoll from 'components/shared/Spinner/SpinnnerRoll'\n\nclass EditProductModal extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            product: {\n                name: props.product.name,\n                description: props.product.description,\n                category: props.product.category\n            },\n            categoryOptions: undefined\n        }\n        this.categoriesService = new CategoryService()\n        this.productService = new ProductsService()\n    }\n\n    componentDidMount() {\n        this.loadCategories()\n    }\n\n    loadCategories() {\n        this.categoriesService\n            .getAllCategories()\n            .then(response => {\n                this.setState({ categoryOptions: response.data })\n            })\n            .catch(err => console.log('Error', err))\n    }\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ product: { ...this.state.product, [name]: value } })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.productService\n            .editProduct(this.props.product._id, this.state.product)\n            .then(response => {\n                this.props.closeModal()\n                this.props.fetchProduct()\n                this.props.handleAlert(`${this.state.product.name} has been updated`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n\n            !this.state.categoryOptions\n                ?\n                <SpinnerRoll />\n                :\n                <>\n                    <Modal.Header> <Modal.Title>Edit Your Product</Modal.Title> </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={e => this.handleSubmit(e)}>\n                            <Form.Row as={Row}>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.product.name} onChange={e => this.handleInputChange(e)} name=\"name\" />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row as={Row}>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control type=\"textarea\" value={this.state.product.description} onChange={e => this.handleInputChange(e)} name=\"description\" />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Group controlId=\"category\">\n                                <Form.Label>Select Category</Form.Label>\n                                <Form.Control as=\"select\" value={this.state.product.category} name=\"category\" onChange={e => this.handleInputChange(e)}>\n                                    <option>{this.state.product.category.name}</option>\n                                    {this.state.categoryOptions.map(elm => <option key={elm._id} value={elm._id} > {elm.name}</option>)}\n                                </Form.Control>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"dark\">Save changes</Button>\n                        </Form>\n                    </Modal.Body>\n                </>\n        )\n    }\n}\n\nexport default EditProductModal"]},"metadata":{},"sourceType":"module"}